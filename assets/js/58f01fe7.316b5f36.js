"use strict";(self.webpackChunkeasybitedocs=self.webpackChunkeasybitedocs||[]).push([[1955],{5374:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"oop/encapsulation","title":"Encapsulation","description":"What is Encapsulation?","source":"@site/docs/oop/encapsulation.md","sourceDirName":"oop","slug":"/oop/encapsulation","permalink":"/oop/encapsulation","draft":false,"unlisted":false,"editUrl":"https://github.com/Easybitedocs/easybitedocs.github.io/tree/main/docs/oop/encapsulation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Inheritance","permalink":"/oop/inheritance"},"next":{"title":"Polymorphism","permalink":"/oop/polymorphism"}}');var i=t(4848),r=t(8453);const a={},o="Encapsulation",d={},c=[{value:"What is Encapsulation?",id:"what-is-encapsulation",level:2},{value:"How to Achieve Encapsulation in EasyBite",id:"how-to-achieve-encapsulation-in-easybite",level:2},{value:"Key Concepts",id:"key-concepts",level:3},{value:"Example: Encapsulation in EasyBite",id:"example-encapsulation-in-easybite",level:2},{value:"Output",id:"output",level:3},{value:"Why Not Access It Directly?",id:"why-not-access-it-directly",level:2},{value:"Benefits of Encapsulation",id:"benefits-of-encapsulation",level:2},{value:"Summary Table",id:"summary-table",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"encapsulation",children:"Encapsulation"})}),"\n",(0,i.jsx)(n.h2,{id:"what-is-encapsulation",children:"What is Encapsulation?"}),"\n",(0,i.jsx)(n.p,{children:"Encapsulation is one of the four main principles of Object-Oriented Programming (OOP). It refers to the practice of hiding the internal details of how an object works and only exposing a controlled interface to the outside world. In simpler terms, encapsulation means:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Grouping data (attributes) and methods (functions that operate on the data) into a single unit (class)."}),"\n",(0,i.jsx)(n.li,{children:"Making some data hidden (private) so that it cannot be accessed directly from outside the class."}),"\n",(0,i.jsx)(n.li,{children:"Providing methods to access or modify that hidden data in a safe and controlled manner."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This helps to protect the internal state of an object, ensures that only valid data is stored, and makes programs easier to maintain."}),"\n",(0,i.jsx)(n.h2,{id:"how-to-achieve-encapsulation-in-easybite",children:"How to Achieve Encapsulation in EasyBite"}),"\n",(0,i.jsxs)(n.p,{children:["In EasyBite, you can use the ",(0,i.jsx)(n.code,{children:"secret"})," keyword to make a class attribute private. This means the attribute cannot be accessed directly from outside the class. To interact with the private attribute, you can define methods known as ",(0,i.jsx)(n.strong,{children:"getters"})," and ",(0,i.jsx)(n.strong,{children:"setters"}),". These are regular methods that follow a naming convention (like ",(0,i.jsx)(n.code,{children:"getname"})," and ",(0,i.jsx)(n.code,{children:"setname"}),") but are not special built-in keywords."]}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"secret"})," to hide an attribute."]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"method"})," to define a function that accesses (get) or modifies (set) the secret attribute."]}),"\n",(0,i.jsx)(n.li,{children:"Getters allow reading the value."}),"\n",(0,i.jsx)(n.li,{children:"Setters allow changing the value."}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"this"})," keyword to refer to the current object."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-encapsulation-in-easybite",children:"Example: Encapsulation in EasyBite"}),"\n",(0,i.jsx)(n.p,{children:"Below is a class that demonstrates how encapsulation works in EasyBite:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'class User\r\n    secret password\r\n\r\n    init(p)\r\n        this.password to p\r\n    end init\r\n\r\n    method getpassword()\r\n        return this.password\r\n    end method\r\n\r\n    method setpassword(newpass)\r\n        this.password to newpass\r\n    end method\r\nend class\r\n\r\nset user1 to new User("secret123")\r\n\r\nshow user1.getpassword()\r\nuser1.setpassword("newpassword456")\r\nshow user1.getpassword()\n'})}),"\n",(0,i.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"secret123\r\nnewpassword456\n"})}),"\n",(0,i.jsx)(n.h2,{id:"why-not-access-it-directly",children:"Why Not Access It Directly?"}),"\n",(0,i.jsx)(n.p,{children:"Trying to access the secret attribute directly will not work:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"show user1.password\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The code above will produce an error or be restricted by the EasyBite runtime because ",(0,i.jsx)(n.code,{children:"password"})," is marked as ",(0,i.jsx)(n.code,{children:"secret"}),". This is the core idea behind encapsulation: the internal data is hidden and protected from direct access."]}),"\n",(0,i.jsx)(n.h2,{id:"benefits-of-encapsulation",children:"Benefits of Encapsulation"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security"}),": Internal object data is protected from accidental or unauthorized access."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Validation"}),": You can add logic in setter methods to prevent invalid data."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'method setpassword(newpass)\r\n    if newpass.length < 6\r\n        show "Password too short"\r\n    else\r\n        this.password to newpass\r\n    end if\r\nend method\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Read-only and Write-only Access"}),": You can create only a getter or only a setter, depending on the requirement."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Maintenance"}),": If the internal structure changes, you only need to update the methods, not the entire program."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Control"}),": Every interaction with secret data goes through a function, which allows adding logs, debugging, and enhancements easily."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"summary-table",children:"Summary Table"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Feature"}),(0,i.jsx)(n.th,{children:"EasyBite Keyword or Rule"}),(0,i.jsx)(n.th,{children:"Explanation"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Define class"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"class"})}),(0,i.jsx)(n.td,{children:"Groups data and methods"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Mark private attribute"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"secret"})}),(0,i.jsx)(n.td,{children:"Hides the attribute from outside access"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Initialize values"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"init"})}),(0,i.jsx)(n.td,{children:"Constructor to set initial values"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"End block"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"end class"}),", ",(0,i.jsx)(n.code,{children:"end method"})]}),(0,i.jsx)(n.td,{children:"Used to close class or method definitions"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Create object"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"new"})}),(0,i.jsx)(n.td,{children:"Used to create a new instance of a class"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Access current object"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"this"})}),(0,i.jsx)(n.td,{children:"Refers to the current instance"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Call method"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"object.method()"})}),(0,i.jsx)(n.td,{children:"Invokes a method of an object"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Encapsulated access"}),(0,i.jsx)(n.td,{children:"Getter and Setter methods"}),(0,i.jsxs)(n.td,{children:["Used to access or modify ",(0,i.jsx)(n.code,{children:"secret"})," data safely"]})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["Encapsulation is one of the first building blocks to writing well-structured, secure, and maintainable object-oriented programs. By using ",(0,i.jsx)(n.code,{children:"secret"})," along with methods, you can ensure your code is clean and professional."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);