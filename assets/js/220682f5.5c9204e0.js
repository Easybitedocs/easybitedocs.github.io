"use strict";(self.webpackChunkeasybitedocs=self.webpackChunkeasybitedocs||[]).push([[9536],{4207:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"libraries/socket","title":"Socket Library Reference","description":"Socket programming is the foundation of network communication in virtually every modern application. A socket is an endpoint for sending or receiving data across a network. Under the hood, sockets abstract away the details of TCP/IP or UDP protocols so you can think in terms of \u201cconnect, send, receive, close.\u201d Common socket types:","source":"@site/docs/libraries/socket.md","sourceDirName":"libraries","slug":"/libraries/socket","permalink":"/libraries/socket","draft":false,"unlisted":false,"editUrl":"https://github.com/Easybitedocs/easybitedocs.github.io/tree/main/docs/libraries/socket.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"MySQL Library Reference","permalink":"/libraries/mysql"},"next":{"title":"Requester Library Reference","permalink":"/libraries/requester"}}');var r=n(4848),c=n(8453);const i={},d="Socket Library Reference",o={},l=[{value:"Why EasyBite Includes Sockets",id:"why-easybite-includes-sockets",level:2},{value:"Benefits for EasyBite Users",id:"benefits-for-easybite-users",level:2},{value:"Available Functions",id:"available-functions",level:2},{value:"Examples",id:"examples",level:2},{value:"1. Basic TCP Client",id:"1-basic-tcp-client",level:3},{value:"2. TCP Echo Server",id:"2-tcp-echo-server",level:3},{value:"3. UDP Broadcast Listener",id:"3-udp-broadcast-listener",level:3},{value:"4. Secure TLS Client",id:"4-secure-tls-client",level:3},{value:"5. DNS Lookup",id:"5-dns-lookup",level:3},{value:"Conclusion",id:"conclusion",level:2}];function h(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"socket-library-reference",children:"Socket Library Reference"})}),"\n",(0,r.jsxs)(s.p,{children:["Socket programming is the foundation of network communication in virtually every modern application. A ",(0,r.jsx)(s.strong,{children:"socket"})," is an endpoint for sending or receiving data across a network. Under the hood, sockets abstract away the details of TCP/IP or UDP protocols so you can think in terms of \u201cconnect, send, receive, close.\u201d Common socket types:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"TCP (stream) sockets"})," provide reliable, ordered, bidirectional byte streams\u2014perfect for HTTP, SSH, and any protocol where you need guaranteed delivery."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"UDP (datagram) sockets"})," offer low\u2011overhead, connectionless message passing\u2014ideal for DNS lookups, real\u2011time audio/video, or game state updates where speed matters more than reliability."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"TLS/SSL sockets"})," layer encryption on top of TCP for secure communication (HTTPS, secure WebSocket, etc.)."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"With sockets you can build everything from simple chat clients and file transfer tools to full\u2011blown HTTP servers and IoT device interfaces."}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"why-easybite-includes-sockets",children:"Why EasyBite Includes Sockets"}),"\n",(0,r.jsx)(s.p,{children:"EasyBite aims to empower beginners and hobbyists to build real\u2011world networked applications without wrestling with external libraries or complex setup. By embedding sockets directly into the core language:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Zero friction"}),": No need to install or configure additional network modules\u2014just ",(0,r.jsx)(s.code,{children:"import socket"})," and go."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Uniform API"}),": A consistent set of functions for TCP, UDP, and TLS that integrate naturally with EasyBite\u2019s ",(0,r.jsx)(s.code,{children:"set"}),", ",(0,r.jsx)(s.code,{children:"show"}),", and ",(0,r.jsx)(s.code,{children:"repeat while"})," constructs."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Rapid prototyping"}),": Spin up clients and servers in minutes, test network protocols, or integrate with web services directly from your script."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Learning"}),": Gain hands\u2011on understanding of networking concepts\u2014connections, binding, listening, and encryption\u2014using familiar syntax."]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"benefits-for-easybite-users",children:"Benefits for EasyBite Users"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Simplicity"}),": One module covers all common network use cases\u2014no switching between TCP\u2011only or UDP\u2011only libraries."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Flexibility"}),": Write clients, servers, DNS utilities, or secure TLS channels with the same API."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Portability"}),": Your network scripts run anywhere EasyBite runs\u2014desktop, server, or embedded device\u2014without modification."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Integration"}),": Combine socket calls with file I/O, JSON handling, and control structures (",(0,r.jsx)(s.code,{children:"repeat while"}),") to build end\u2011to\u2011end applications."]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h1,{id:"socket-library-reference-1",children:"Socket Library Reference"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"socket"})," library provides low\u2011level network primitives for TCP, UDP, and TLS. Import with:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"import socket\n"})}),"\n",(0,r.jsx)(s.p,{children:"Or selectively:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"from socket import tcp_connect, udp_bind, tls_connect\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"available-functions",children:"Available Functions"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Category"}),(0,r.jsx)(s.th,{children:"Function"}),(0,r.jsx)(s.th,{children:"Parameters"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"TCP"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tcp_connect(host, port)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"host"})," (String), ",(0,r.jsx)(s.code,{children:"port"})," (Number)"]}),(0,r.jsxs)(s.td,{children:["Open a TCP connection to ",(0,r.jsx)(s.code,{children:"host:port"}),", returning a ",(0,r.jsx)(s.code,{children:"TcpStream"})," object."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tcp_send(stream, data)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"stream"})," (TcpStream), ",(0,r.jsx)(s.code,{children:"data"})," (String)"]}),(0,r.jsxs)(s.td,{children:["Send ",(0,r.jsx)(s.code,{children:"data"})," over the TCP connection, returning ",(0,r.jsx)(s.code,{children:"true"})," on success."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tcp_receive(stream)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"stream"})," (TcpStream)"]}),(0,r.jsxs)(s.td,{children:["Receive up to 1024\xa0bytes as a String, or ",(0,r.jsx)(s.code,{children:"null"})," if closed."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tcp_close(stream)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"stream"})," (TcpStream)"]}),(0,r.jsx)(s.td,{children:"Close the TCP connection."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tcp_bind(host, port)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"host"})," (String), ",(0,r.jsx)(s.code,{children:"port"})," (Number)"]}),(0,r.jsxs)(s.td,{children:["Bind a TCP socket on ",(0,r.jsx)(s.code,{children:"host:port"})," and store it globally."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tcp_listen(backlog)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"backlog"})," (Number)"]}),(0,r.jsxs)(s.td,{children:["Listen on the bound socket, returning a ",(0,r.jsx)(s.code,{children:"TcpListener"}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tcp_listen_with_backlog(h,p,b)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"host"}),", ",(0,r.jsx)(s.code,{children:"port"}),", ",(0,r.jsx)(s.code,{children:"backlog"})]}),(0,r.jsx)(s.td,{children:"Bind and listen in one call."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tcp_accept()"})}),(0,r.jsx)(s.td,{children:"\u2014"}),(0,r.jsxs)(s.td,{children:["Accept next connection, returning ",(0,r.jsx)(s.code,{children:'{ "connection": TcpStream, "client_addr": String }'}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tcp_accept_by_addr(ip, port)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"ip"})," (String), ",(0,r.jsx)(s.code,{children:"port"})," (Number)"]}),(0,r.jsx)(s.td,{children:"Only accept a connection matching that client address."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"UDP"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"udp_bind(addr)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"addr"})," (String)"]}),(0,r.jsxs)(s.td,{children:["Bind a UDP socket on ",(0,r.jsx)(s.code,{children:"addr"}),", returning a ",(0,r.jsx)(s.code,{children:"UdpSocket"}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"udp_send_to(sock, data, tgt)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"sock"})," (UdpSocket), ",(0,r.jsx)(s.code,{children:"data"})," (String), ",(0,r.jsx)(s.code,{children:"tgt"})," (String)"]}),(0,r.jsxs)(s.td,{children:["Send ",(0,r.jsx)(s.code,{children:"data"})," to ",(0,r.jsx)(s.code,{children:"tgt"}),", returning bytes sent."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"udp_receive_from(sock)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"sock"})," (UdpSocket)"]}),(0,r.jsxs)(s.td,{children:["Receive up to 1024\xa0bytes, returning ",(0,r.jsx)(s.code,{children:'{ "message": String, "address": String }'}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"TLS"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tls_connect(h, p, domain)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"host"}),", ",(0,r.jsx)(s.code,{children:"port"}),", ",(0,r.jsx)(s.code,{children:"domain"})]}),(0,r.jsxs)(s.td,{children:["Open a TLS client connection, validating against ",(0,r.jsx)(s.code,{children:"domain"}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tls_listen(h,p,pkcs12,pwd)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"host"}),", ",(0,r.jsx)(s.code,{children:"port"}),", ",(0,r.jsx)(s.code,{children:"pkcs12_path"}),", ",(0,r.jsx)(s.code,{children:"password"})]}),(0,r.jsxs)(s.td,{children:["Bind TLS listener with PKCS#12 cert, returning ",(0,r.jsx)(s.code,{children:"{listener, acceptor}"}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tls_accept(info)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"info"})," (Dict)"]}),(0,r.jsxs)(s.td,{children:["Accept a TLS connection using ",(0,r.jsx)(s.code,{children:"{listener, acceptor}"}),", returning a ",(0,r.jsx)(s.code,{children:"TlsStream"}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tls_send(stream, data)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"stream"})," (TlsStream), ",(0,r.jsx)(s.code,{children:"data"})," (String)"]}),(0,r.jsxs)(s.td,{children:["Send over TLS, returning ",(0,r.jsx)(s.code,{children:"true"}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tls_receive(stream)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"stream"})," (TlsStream)"]}),(0,r.jsx)(s.td,{children:"Receive over TLS up to 1024\xa0bytes."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tls_close(stream)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"stream"})," (TlsStream)"]}),(0,r.jsx)(s.td,{children:"Close the TLS connection."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Utility"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"set_nonblocking(sock, mode)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"sock"})," (TcpStream/TcpListener/UdpSocket), ",(0,r.jsx)(s.code,{children:"mode"})," (Bool)"]}),(0,r.jsx)(s.td,{children:"Enable or disable non\u2011blocking mode."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"set_nonblocking_global(mode)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"mode"})," (Bool)"]}),(0,r.jsx)(s.td,{children:"Same for the global TCP listener."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"gethostbyname(hostname)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"hostname"})," (String)"]}),(0,r.jsx)(s.td,{children:"Resolve to an array of IP address strings."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"sendfile(stream, path)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"stream"})," (TcpStream), ",(0,r.jsx)(s.code,{children:"path"})," (String)"]}),(0,r.jsx)(s.td,{children:"Stream file contents over TCP."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"receivefile(stream, path)"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"stream"})," (TcpStream), ",(0,r.jsx)(s.code,{children:"path"})," (String)"]}),(0,r.jsx)(s.td,{children:"Receive from TCP and save to file."})]})]})]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(s.p,{children:["All examples use ",(0,r.jsx)(s.code,{children:"repeat while(condition)"})," and ",(0,r.jsx)(s.code,{children:"end repeat"})," for looping."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"import socket\n"})}),"\n",(0,r.jsx)(s.h3,{id:"1-basic-tcp-client",children:"1. Basic TCP Client"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:'set s to socket.tcp_connect("example.com", 80)\r\nset _ to socket.tcp_send(s, "GET / HTTP/1.0\\r\\nHost: example.com\\r\\n\\r\\n")\r\nset response to socket.tcp_receive(s)\r\nshow(response)\r\n// Output:\r\n// HTTP/1.0 200 OK\r\n...\r\nset _ to socket.tcp_close(s)\n'})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"2-tcp-echo-server",children:"2. TCP Echo Server"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:'// Bind and listen\r\nset _ to socket.tcp_bind("0.0.0.0", 9000)\r\nset listener to socket.tcp_listen(5)\r\n\r\n// Loop to accept connections\r\nrepeat while(true)\r\n    set info to socket.tcp_accept()\r\n    // info["connection"], info["client_addr"]\r\n    set client to info["connection"]\r\n    // Echo until client closes\r\n    repeat while(true)\r\n        set msg to socket.tcp_receive(client)\r\n        if (msg is null) then\r\n            exit\r\n        end if\r\n        set _ to socket.tcp_send(client, "Echo: " + msg)\r\n    end repeat\r\n    set _ to socket.tcp_close(client)\r\nend repeat\n'})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"3-udp-broadcast-listener",children:"3. UDP Broadcast Listener"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:'set sock to socket.udp_bind("0.0.0.0:8000")\r\nrepeat while(true)\r\n    set data to socket.udp_receive_from(sock)\r\n    show("Got from " + data["address"] + ": " + data["message"])\r\nend repeat\n'})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"4-secure-tls-client",children:"4. Secure TLS Client"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:'set tls to socket.tls_connect("example.com", 443, "example.com")\r\nset _ to socket.tls_send(tls, "GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n")\r\nset reply to socket.tls_receive(tls)\r\nshow(reply)\r\nset _ to socket.tls_close(tls)\n'})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"5-dns-lookup",children:"5. DNS Lookup"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:'set ips to socket.gethostbyname("localhost")\r\nshow(ips)\r\n// Output:\r\n// ["127.0.0.1", "::1"]\n'})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsxs)(s.p,{children:["With the ",(0,r.jsx)(s.code,{children:"socket"})," library you can build clients, servers, file\u2011transfer tools, and secure connections\u2014all in EasyBite:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Import"}),": ",(0,r.jsx)(s.code,{children:"import socket"})," \u2192 ",(0,r.jsx)(s.code,{children:"socket.tcp_connect(...)"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Selective"}),": ",(0,r.jsx)(s.code,{children:"from socket import tcp_connect, udp_bind"})," \u2192 call directly"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Use these primitives plus ",(0,r.jsx)(s.code,{children:"repeat while(condition)...end repeat"})," to create robust networked applications without external dependencies."]})]})}function a(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>d});var t=n(6540);const r={},c=t.createContext(r);function i(e){const s=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(c.Provider,{value:s},e.children)}}}]);