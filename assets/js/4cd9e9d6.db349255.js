"use strict";(self.webpackChunkeasybitedocs=self.webpackChunkeasybitedocs||[]).push([[7005],{373:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"functions/builtin-functions","title":"Built\u2011in Functions","description":"EasyBite comes with a powerful suite of built\u2011in functions that you can use instantly\u2014no installation, no setup, no fuss. These functions live in the global scope and handle everyday tasks like printing output, reading user input, and manipulating binary data. In the sections that follow, we\u2019ll explore four of the most essential built\u2011ins in great detail, with clear, step\u2011by\u2011step explanations and plenty of examples that even a complete beginner can follow. Then we\u2019ll show you how to bring in additional functions from EasyBite\u2019s standard libraries, and finally point you to the full reference at /libraries/get-started.","source":"@site/docs/functions/builtin-functions.md","sourceDirName":"functions","slug":"/functions/builtin-functions","permalink":"/functions/builtin-functions","draft":false,"unlisted":false,"editUrl":"https://github.com/Easybitedocs/easybitedocs.github.io/tree/main/docs/functions/builtin-functions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Callbacks in EasyBite","permalink":"/functions/callback-function"},"next":{"title":"Naming Convention","permalink":"/functions/naming-convension"}}');var r=i(4848),t=i(8453);const l={},o="Built\u2011in Functions",a={},c=[{value:"Table of Contents",id:"table-of-contents",level:3},{value:"Overview of Built\u2011in Functions",id:"overview-of-builtin-functions",level:2},{value:"Output with <code>show</code>",id:"output-with-show",level:2},{value:"How It Works",id:"how-it-works",level:3},{value:"Detailed Examples",id:"detailed-examples",level:3},{value:"Output with <code>showline</code>",id:"output-with-showline",level:2},{value:"Why Use <code>showline</code>",id:"why-use-showline",level:3},{value:"Example Usage",id:"example-usage",level:3},{value:"Reading Input with <code>input</code>",id:"reading-input-with-input",level:2},{value:"How It Works",id:"how-it-works-1",level:3},{value:"Detailed Examples",id:"detailed-examples-1",level:3},{value:"Working with Binary Data using <code>bytearray</code>",id:"working-with-binary-data-using-bytearray",level:2},{value:"How It Works",id:"how-it-works-2",level:3},{value:"Detailed Examples",id:"detailed-examples-2",level:3},{value:"Importing Functions from Built\u2011in Libraries",id:"importing-functions-from-builtin-libraries",level:2},{value:"Import Syntax",id:"import-syntax",level:3},{value:"Examples of Imported Functions",id:"examples-of-imported-functions",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"Full Reference",id:"full-reference",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"builtin-functions",children:"Built\u2011in Functions"})}),"\n",(0,r.jsxs)(n.p,{children:["EasyBite comes with a powerful suite of ",(0,r.jsx)(n.strong,{children:"built\u2011in functions"})," that you can use instantly\u2014no installation, no setup, no fuss. These functions live in the global scope and handle everyday tasks like printing output, reading user input, and manipulating binary data. In the sections that follow, we\u2019ll explore four of the most essential built\u2011ins in ",(0,r.jsx)(n.strong,{children:"great detail"}),", with clear, step\u2011by\u2011step explanations and plenty of examples that even a complete beginner can follow. Then we\u2019ll show you how to bring in additional functions from EasyBite\u2019s standard libraries, and finally point you to the full reference at ",(0,r.jsx)(n.code,{children:"/libraries/get-started"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#builtin-functions",children:"Built\u2011in Functions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#table-of-contents",children:"Table of Contents"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#overview-of-builtin-functions",children:"Overview of Built\u2011in Functions"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.a,{href:"#output-with-show",children:["Output with ",(0,r.jsx)(n.code,{children:"show"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#how-it-works",children:"How It Works"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#detailed-examples",children:"Detailed Examples"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.a,{href:"#output-with-showline",children:["Output with ",(0,r.jsx)(n.code,{children:"showline"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.a,{href:"#why-use-showline",children:["Why Use ",(0,r.jsx)(n.code,{children:"showline"})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#example-usage",children:"Example Usage"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.a,{href:"#reading-input-with-input",children:["Reading Input with ",(0,r.jsx)(n.code,{children:"input"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#how-it-works-1",children:"How It Works"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#detailed-examples-1",children:"Detailed Examples"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.a,{href:"#working-with-binary-data-using-bytearray",children:["Working with Binary Data using ",(0,r.jsx)(n.code,{children:"bytearray"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#how-it-works-2",children:"How It Works"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#detailed-examples-2",children:"Detailed Examples"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#importing-functions-from-builtin-libraries",children:"Importing Functions from Built\u2011in Libraries"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#import-syntax",children:"Import Syntax"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#examples-of-imported-functions",children:"Examples of Imported Functions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#conclusion",children:"Conclusion"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#full-reference",children:"Full Reference"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"overview-of-builtin-functions",children:"Overview of Built\u2011in Functions"}),"\n",(0,r.jsx)(n.p,{children:"Built\u2011in functions are the first tools you reach for when writing EasyBite programs. Because they are part of the language core, you:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Don\u2019t need"})," any ",(0,r.jsx)(n.code,{children:"import"})," or ",(0,r.jsx)(n.code,{children:"include"})," statement (unless you want extra library functions)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Call them"})," anywhere in your script simply by writing their name and parentheses."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Combine them"})," with your own functions to build complex behavior."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Every built\u2011in function has a defined purpose\u2014some print to the screen, some read from the user, and others manipulate data structures. In the next sections, we\u2019ll focus on four that form the foundation of most EasyBite programs: ",(0,r.jsx)(n.code,{children:"show"}),", ",(0,r.jsx)(n.code,{children:"showline"}),", ",(0,r.jsx)(n.code,{children:"input"}),", and ",(0,r.jsx)(n.code,{children:"bytearray"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"output-with-show",children:["Output with ",(0,r.jsx)(n.code,{children:"show"})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"show"})," function is your go\u2011to for sending text or values to the console. It ",(0,r.jsx)(n.strong,{children:"does not"})," append a newline automatically, so you can control exactly how your output appears."]}),"\n",(0,r.jsx)(n.h3,{id:"how-it-works",children:"How It Works"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Syntax"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:" show(value)\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameter"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," can be a literal string (",(0,r.jsx)(n.code,{children:'"Hello"'}),"), a number (",(0,r.jsx)(n.code,{children:"42"}),"), an expression (",(0,r.jsx)(n.code,{children:"3 + 4"}),"), a list (",(0,r.jsx)(n.code,{children:"[1,2,3]"}),"), or even the result of another function call."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Behavior"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Prints ",(0,r.jsx)(n.code,{children:"value"})," immediately."]}),"\n",(0,r.jsx)(n.li,{children:"Cursor remains on the same line."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"detailed-examples",children:"Detailed Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:'// 1. Simple text\r\nshow("Welcome to EasyBite!")    \r\n// Console now shows: Welcome to EasyBite!\r\n\r\n// 2. Printing numbers and expressions\r\nshow("2 + 2 = ")\r\nshow(2 + 2)\r\n// Console: 2 + 2 = 4\r\n\r\n// 3. Combining text and variables\r\nset count to 5\r\nshow("You have ")\r\nshow(count)\r\nshow(" new messages.")\r\n// Console: You have 5 new messages.\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Because ",(0,r.jsx)(n.code,{children:"show"})," doesn\u2019t move to a new line, you can build up a single line of output in pieces, which is useful for progress indicators or formatted tables."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"output-with-showline",children:["Output with ",(0,r.jsx)(n.code,{children:"showline"})]}),"\n",(0,r.jsxs)(n.p,{children:["While ",(0,r.jsx)(n.code,{children:"show"})," prints without a newline, ",(0,r.jsx)(n.code,{children:"showline"})," exists ",(0,r.jsx)(n.strong,{children:"solely"})," to print a ",(0,r.jsx)(n.strong,{children:"blank line"}),". It takes ",(0,r.jsx)(n.strong,{children:"no arguments"}),"\u2014you call it as ",(0,r.jsx)(n.code,{children:"showline()"}),"\u2014and it inserts one empty line in the output."]}),"\n",(0,r.jsxs)(n.h3,{id:"why-use-showline",children:["Why Use ",(0,r.jsx)(n.code,{children:"showline"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Separate sections"})," of console output for readability."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Add vertical spacing"})," without printing any text."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Emulate paragraph breaks"})," in terminal applications."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:'show("Step 1 completed.")\r\nshowline()           // Inserts one blank line\r\nshow("Step 2 starting...")\r\nshowline()\r\nshow("All done!")\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Console Output:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Step 1 completed.\r\n\r\nStep 2 starting...\r\n\r\nAll done!\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Remember: because ",(0,r.jsx)(n.code,{children:"showline"})," takes no parameters, any attempt to pass an argument (for example, ",(0,r.jsx)(n.code,{children:'showline("Text")'}),") will result in a syntax error. Its only purpose is to make your console output cleaner and easier to read."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"reading-input-with-input",children:["Reading Input with ",(0,r.jsx)(n.code,{children:"input"})]}),"\n",(0,r.jsxs)(n.p,{children:["Interactivity begins with ",(0,r.jsx)(n.code,{children:"input"}),", which displays a prompt and ",(0,r.jsx)(n.strong,{children:"pauses"})," execution until the user types a response and presses Enter. Whatever the user types is returned as a ",(0,r.jsx)(n.strong,{children:"string"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"how-it-works-1",children:"How It Works"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Syntax"}),":","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"set variable to input(promptText)\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameter"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"promptText"}),": a string that appears before the cursor, asking the user for information."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return Value"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Always a string, even if the user types digits."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"detailed-examples-1",children:"Detailed Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:'// 1. Asking for a name\r\nset name to input("Enter your name: ")\r\nshow("Hello, " + name + "!")\r\n\r\nfrom convert import toint\r\n// 2. Numeric input conversion\r\nset ageText to input("Enter your age: ")\r\nset age to toint(ageText)   // Convert string to number\r\nshow("In five years, you will be " + (age + 5))\r\n\r\n// 3. Using input inline\r\nshow("Ready? Press Enter to continue.")\r\nset _ to input("")            // Prompt with empty string\r\nshow("Continuing...")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Because ",(0,r.jsx)(n.code,{children:"input"})," always returns text, whenever you need numeric or boolean values, remember to convert them explicitly with ",(0,r.jsx)(n.code,{children:"toNumber"}),", ",(0,r.jsx)(n.code,{children:"toBoolean"}),", or other conversion functions."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"working-with-binary-data-using-bytearray",children:["Working with Binary Data using ",(0,r.jsx)(n.code,{children:"bytearray"})]}),"\n",(0,r.jsxs)(n.p,{children:["When you need to manipulate raw bytes\u2014for example, reading a file or crafting a network packet\u2014you use ",(0,r.jsx)(n.code,{children:"bytearray"}),". This built\u2011in creates a ",(0,r.jsx)(n.strong,{children:"mutable array of integers"})," in the range 0\u2013255."]}),"\n",(0,r.jsx)(n.h3,{id:"how-it-works-2",children:"How It Works"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Create empty or zeroed"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:" set data to bytearray(length)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"length"}),": the number of bytes, all initialized to ",(0,r.jsx)(n.code,{children:"0"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Create from list"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:" set header to bytearray([0xDE, 0xAD, 0xBE, 0xEF])\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Indexing"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["1\u2011based indices: ",(0,r.jsx)(n.code,{children:"data[1]"}),", ",(0,r.jsx)(n.code,{children:"data[2]"}),", \u2026"]}),"\n",(0,r.jsxs)(n.li,{children:["Read or write: ",(0,r.jsx)(n.code,{children:"set data[3] to 255"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"detailed-examples-2",children:"Detailed Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"from convert import tostring\r\n\r\n// 1. Initialize 4 bytes to zero\r\nset buffer to bytearray(4)         \r\n// buffer = [0, 0, 0, 0]\r\n\r\n// 2. Modify individual bytes\r\nset buffer[1] to 0x48   // ASCII 'H'\r\nset buffer[2] to 0x69   // ASCII 'i'\r\nset buffer[3] to 0x21   // '!'\r\nset buffer[4] to 0x0A   // newline\r\n\r\n// 3. Iterate and display hex values\r\nset i to 1\r\nrepeat while(i <= buffer.length())\r\n    show(\"Byte \" + i + \": \")\r\n    show(tostring(buffer[i]))\r\n    showline()\r\n    set i to i + 1\r\nend repeat\r\n\r\n// 4. Convert bytearray back to string (using library)\r\nimport string\r\nset text to string.frombytes(buffer)\r\nshow(\"Message: \" + text)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Bytearrays give you ",(0,r.jsx)(n.strong,{children:"low\u2011level control"})," over data, but you can combine them with library functions (such as ",(0,r.jsx)(n.code,{children:"string.frombytes"}),") to convert between text and binary."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"importing-functions-from-builtin-libraries",children:"Importing Functions from Built\u2011in Libraries"}),"\n",(0,r.jsxs)(n.p,{children:["Beyond the core built\u2011ins, EasyBite provides ",(0,r.jsx)(n.strong,{children:"standard libraries"}),"\u2014collections of related functions you import when needed. Common libraries include ",(0,r.jsx)(n.code,{children:"math"}),", ",(0,r.jsx)(n.code,{children:"string"}),", ",(0,r.jsx)(n.code,{children:"io"}),", and more."]}),"\n",(0,r.jsx)(n.h3,{id:"import-syntax",children:"Import Syntax"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Import entire library"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:" import math\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Use with dot\u2011notation: ",(0,r.jsx)(n.code,{children:"math.sqrt(16)"})]}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Import specific functions"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:" from math import sqrt, pow\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Call directly: ",(0,r.jsx)(n.code,{children:"sqrt(9)"})]}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Alias a library"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:' import string\r\n set upper to string.toupper("hello")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Imports must appear ",(0,r.jsx)(n.strong,{children:"before"})," you call the functions you\u2019ve imported."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"examples-of-imported-functions",children:"Examples of Imported Functions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:'import math\r\nimport string\r\n\r\n// Math: compute hypotenuse\r\nset a to 3\r\nset b to 4\r\nset c to math.sqrt(a*a + b*b)\r\nshow("Hypotenuse: " + c)\r\nshowline()\r\n\r\n// String: convert to uppercase\r\nset greeting to "easybite"\r\nset shout to string.toUpper(greeting)\r\nshow("Shout: " + shout)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["By importing only what you need, you keep your code ",(0,r.jsx)(n.strong,{children:"clear"})," and avoid naming conflicts."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsxs)(n.p,{children:["Built\u2011in functions like ",(0,r.jsx)(n.code,{children:"show"}),", ",(0,r.jsx)(n.code,{children:"showline()"}),", ",(0,r.jsx)(n.code,{children:"input"}),", and ",(0,r.jsx)(n.code,{children:"bytearray"})," form the ",(0,r.jsx)(n.strong,{children:"foundation"})," of EasyBite programming. They let you interact with the user, format output, and manipulate data at a low level\u2014all without any setup. When you need more specialized behavior, import functions from EasyBite\u2019s standard libraries using simple ",(0,r.jsx)(n.code,{children:"import"})," statements."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"full-reference",children:"Full Reference"}),"\n",(0,r.jsxs)(n.p,{children:["For a ",(0,r.jsx)(n.strong,{children:"complete list"})," of built\u2011in libraries and their functions, see the EasyBite documentation:",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.a,{href:"/libraries/get-started",children:"Full Built\u2011in Libraries Reference"})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);