"use strict";(self.webpackChunkeasybitedocs=self.webpackChunkeasybitedocs||[]).push([[9552],{7461:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"libraries/datetime","title":"DateTime Library Reference","description":"The datetime library provides functions for working with dates and times in EasyBite. All date values are represented as strings in \\"YYYY-MM-DD\\" format and time values in \\"HHSS\\" format. You can import the entire module with import datetime and call functions as datetime.today(), or import specific functions with from datetime import today, datediff, timeadd, etc.","source":"@site/docs/libraries/datetime.md","sourceDirName":"libraries","slug":"/libraries/datetime","permalink":"/libraries/datetime","draft":false,"unlisted":false,"editUrl":"https://github.com/Easybitedocs/easybitedocs.github.io/tree/main/docs/libraries/datetime.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Dict Library Reference","permalink":"/libraries/dictionary"},"next":{"title":"Convert Library Reference","permalink":"/libraries/conversion"}}');var i=r(4848),n=r(8453);const s={},a="DateTime Library Reference",o={},c=[{value:"Available Functions",id:"available-functions",level:2},{value:"Examples",id:"examples",level:2},{value:"1. <code>today()</code>",id:"1-today",level:3},{value:"2. <code>timenow()</code>",id:"2-timenow",level:3},{value:"3. <code>datediff(date1, date2)</code>",id:"3-datediffdate1-date2",level:3},{value:"4. <code>dateadd(date, days)</code>",id:"4-dateadddate-days",level:3},{value:"5. <code>dateformat(date, format)</code>",id:"5-dateformatdate-format",level:3},{value:"6. <code>dateparse(dateString, format)</code>",id:"6-dateparsedatestring-format",level:3},{value:"7. <code>timediff(time1, time2)</code>",id:"7-timedifftime1-time2",level:3},{value:"8. <code>timeadd(time, unit, interval)</code>",id:"8-timeaddtime-unit-interval",level:3},{value:"9. <code>timeformat(time, format)</code>",id:"9-timeformattime-format",level:3},{value:"10. <code>timeparse(timeString, format)</code>",id:"10-timeparsetimestring-format",level:3},{value:"Conclusion",id:"conclusion",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"datetime-library-reference",children:"DateTime Library Reference"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"datetime"})," library provides functions for working with dates and times in EasyBite. All date values are represented as strings in ",(0,i.jsx)(t.code,{children:'"YYYY-MM-DD"'})," format and time values in ",(0,i.jsx)(t.code,{children:'"HH:MM:SS"'})," format. You can import the entire module with ",(0,i.jsx)(t.code,{children:"import datetime"})," and call functions as ",(0,i.jsx)(t.code,{children:"datetime.today()"}),", or import specific functions with ",(0,i.jsx)(t.code,{children:"from datetime import today, datediff, timeadd"}),", etc."]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"available-functions",children:"Available Functions"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Function"}),(0,i.jsx)(t.th,{children:"Parameters"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"today()"})}),(0,i.jsx)(t.td,{children:"\u2015"}),(0,i.jsxs)(t.td,{children:["Returns the current date as a string ",(0,i.jsx)(t.code,{children:'"YYYY-MM-DD"'}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"timenow()"})}),(0,i.jsx)(t.td,{children:"\u2015"}),(0,i.jsxs)(t.td,{children:["Returns the current local time as a string ",(0,i.jsx)(t.code,{children:'"HH:MM:SS"'}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"datediff(date1, date2)"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"date1"}),", ",(0,i.jsx)(t.code,{children:"date2"})," (strings ",(0,i.jsx)(t.code,{children:'"YYYY-MM-DD"'}),")"]}),(0,i.jsxs)(t.td,{children:["Returns the number of days from ",(0,i.jsx)(t.code,{children:"date1"})," to ",(0,i.jsx)(t.code,{children:"date2"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"dateadd(date, days)"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"date"})," (string), ",(0,i.jsx)(t.code,{children:"days"})," (number)"]}),(0,i.jsxs)(t.td,{children:["Adds ",(0,i.jsx)(t.code,{children:"days"})," days to ",(0,i.jsx)(t.code,{children:"date"}),", returns new date string."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"dateformat(date, format)"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"date"})," (string), ",(0,i.jsx)(t.code,{children:"format"})," (format string)"]}),(0,i.jsxs)(t.td,{children:["Formats ",(0,i.jsx)(t.code,{children:"date"})," according to ",(0,i.jsx)(t.code,{children:"format"})," (e.g. ",(0,i.jsx)(t.code,{children:'"%b %d, %Y"'}),"), returns the formatted string."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"dateparse(dateString, format)"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"dateString"}),", ",(0,i.jsx)(t.code,{children:"format"})," (strings)"]}),(0,i.jsxs)(t.td,{children:["Parses ",(0,i.jsx)(t.code,{children:"dateString"})," using ",(0,i.jsx)(t.code,{children:"format"}),", returns date in ",(0,i.jsx)(t.code,{children:'"YYYY-MM-DD"'}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"timediff(time1, time2)"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"time1"}),", ",(0,i.jsx)(t.code,{children:"time2"})," (strings ",(0,i.jsx)(t.code,{children:'"HH:MM:SS"'}),")"]}),(0,i.jsxs)(t.td,{children:["Returns the difference in seconds from ",(0,i.jsx)(t.code,{children:"time1"})," to ",(0,i.jsx)(t.code,{children:"time2"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"timeadd(time, unit, interval)"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"time"})," (string), ",(0,i.jsx)(t.code,{children:"unit"})," (string), ",(0,i.jsx)(t.code,{children:"interval"})," (number)"]}),(0,i.jsxs)(t.td,{children:["Adds ",(0,i.jsx)(t.code,{children:"interval"})," of ",(0,i.jsx)(t.code,{children:"unit"})," (",(0,i.jsx)(t.code,{children:'"seconds"'}),", ",(0,i.jsx)(t.code,{children:'"minutes"'}),", ",(0,i.jsx)(t.code,{children:'"hours"'}),") to ",(0,i.jsx)(t.code,{children:"time"}),", returns new ",(0,i.jsx)(t.code,{children:'"HH:MM:SS"'}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"timeformat(time, format)"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"time"})," (string), ",(0,i.jsx)(t.code,{children:"format"})," (format string)"]}),(0,i.jsxs)(t.td,{children:["Formats ",(0,i.jsx)(t.code,{children:"time"})," according to ",(0,i.jsx)(t.code,{children:"format"})," (e.g. ",(0,i.jsx)(t.code,{children:'"%I:%M %p"'}),"), returns the formatted string."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"timeparse(timeString, format)"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"timeString"}),", ",(0,i.jsx)(t.code,{children:"format"})," (strings)"]}),(0,i.jsxs)(t.td,{children:["Parses ",(0,i.jsx)(t.code,{children:"timeString"})," using ",(0,i.jsx)(t.code,{children:"format"}),", returns time in ",(0,i.jsx)(t.code,{children:'"HH:MM:SS"'}),"."]})]})]})]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(t.h3,{id:"1-today",children:["1. ",(0,i.jsx)(t.code,{children:"today()"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"import datetime\r\nset currentDate to datetime.today()\r\nshow(currentDate)\r\n// Output (example):\r\n// 2025-04-20\r\n\r\nfrom datetime import today\r\nset todayDate to today()\r\nshow(todayDate)\r\n// Output (example):\r\n// 2025-04-20\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.h3,{id:"2-timenow",children:["2. ",(0,i.jsx)(t.code,{children:"timenow()"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"import datetime\r\nset now to datetime.timenow()\r\nshow(now)\r\n// Output (example):\r\n// 14:35:07\r\n\r\nfrom datetime import timenow\r\nset currentTime to timenow()\r\nshow(currentTime)\r\n// Output (example):\r\n// 14:35:07\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.h3,{id:"3-datediffdate1-date2",children:["3. ",(0,i.jsx)(t.code,{children:"datediff(date1, date2)"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:'import datetime\r\nset diff to datetime.datediff("2025-04-10", "2025-04-15")\r\nshow(diff)\r\n// Output:\r\n// 5\r\n\r\nfrom datetime import datediff\r\nset daysBetween to datediff("2025-01-01", "2025-04-20")\r\nshow(daysBetween)\r\n// Output:\r\n// 109\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.h3,{id:"4-dateadddate-days",children:["4. ",(0,i.jsx)(t.code,{children:"dateadd(date, days)"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:'import datetime\r\nset newDate to datetime.dateadd("2025-04-20", 10)\r\nshow(newDate)\r\n// Output:\r\n// 2025-04-30\r\n\r\nfrom datetime import dateadd\r\nset future to dateadd("2025-04-20", -5)\r\nshow(future)\r\n// Output:\r\n// 2025-04-15\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.h3,{id:"5-dateformatdate-format",children:["5. ",(0,i.jsx)(t.code,{children:"dateformat(date, format)"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:'import datetime\r\nset formatted to datetime.dateformat("2025-04-20", "%B %d, %Y")\r\nshow(formatted)\r\n// Output:\r\n// April 20, 2025\r\n\r\nfrom datetime import dateformat\r\nset f2 to dateformat("2025-04-20", "%m/%d/%Y")\r\nshow(f2)\r\n// Output:\r\n// 04/20/2025\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.h3,{id:"6-dateparsedatestring-format",children:["6. ",(0,i.jsx)(t.code,{children:"dateparse(dateString, format)"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:'import datetime\r\nset parsed to datetime.dateparse("20-04-2025", "%d-%m-%Y")\r\nshow(parsed)\r\n// Output:\r\n// 2025-04-20\r\n\r\nfrom datetime import dateparse\r\nset p2 to dateparse("April 20, 2025", "%B %d, %Y")\r\nshow(p2)\r\n// Output:\r\n// 2025-04-20\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.h3,{id:"7-timedifftime1-time2",children:["7. ",(0,i.jsx)(t.code,{children:"timediff(time1, time2)"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:'import datetime\r\nset secondsDiff to datetime.timediff("12:00:00", "14:30:00")\r\nshow(secondsDiff)\r\n// Output:\r\n// 9000\r\n\r\nfrom datetime import timediff\r\nset sd to timediff("23:59:00", "00:01:00")\r\nshow(sd)\r\n// Output:\r\n// -1438\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.h3,{id:"8-timeaddtime-unit-interval",children:["8. ",(0,i.jsx)(t.code,{children:"timeadd(time, unit, interval)"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:'import datetime\r\nset t1 to datetime.timeadd("12:00:00", "hours", 3)\r\nshow(t1)\r\n// Output:\r\n// 15:00:00\r\n\r\nfrom datetime import timeadd\r\nset t2 to timeadd("23:50:00", "minutes", 15)\r\nshow(t2)\r\n// Output:\r\n// 00:05:00\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.h3,{id:"9-timeformattime-format",children:["9. ",(0,i.jsx)(t.code,{children:"timeformat(time, format)"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:'import datetime\r\nset tf to datetime.timeformat("14:35:07", "%I:%M %p")\r\nshow(tf)\r\n// Output:\r\n// 02:35 PM\r\n\r\nfrom datetime import timeformat\r\nset tf2 to timeformat("07:05:00", "%H:%M")\r\nshow(tf2)\r\n// Output:\r\n// 07:05\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.h3,{id:"10-timeparsetimestring-format",children:["10. ",(0,i.jsx)(t.code,{children:"timeparse(timeString, format)"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:'import datetime\r\nset tp to datetime.timeparse("2:35 PM", "%I:%M %p")\r\nshow(tp)\r\n// Output:\r\n// 14:35:00\r\n\r\nfrom datetime import timeparse\r\nset tp2 to timeparse("07-05-00", "%H-%M-%S")\r\nshow(tp2)\r\n// Output:\r\n// 07:05:00\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"datetime"})," library in EasyBite gives you all the tools to obtain, manipulate, compare, format, and parse dates and times:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Import the whole module"}),": ",(0,i.jsx)(t.code,{children:"import datetime"})," \u2192 ",(0,i.jsx)(t.code,{children:"datetime.function(...)"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Import specific functions"}),": ",(0,i.jsx)(t.code,{children:"from datetime import today, datediff, timeadd"})," \u2192 ",(0,i.jsx)(t.code,{children:"today()"}),", ",(0,i.jsx)(t.code,{children:"datediff(...)"}),", ",(0,i.jsx)(t.code,{children:"timeadd(...)"})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Choose the import style that makes your code most readable and concise."})]})}function m(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>a});var d=r(6540);const i={},n=d.createContext(i);function s(e){const t=d.useContext(n);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),d.createElement(n.Provider,{value:t},e.children)}}}]);