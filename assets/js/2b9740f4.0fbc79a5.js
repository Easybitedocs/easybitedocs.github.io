"use strict";(self.webpackChunkeasybitedocs=self.webpackChunkeasybitedocs||[]).push([[9637],{8453:(e,r,s)=>{s.d(r,{R:()=>t,x:()=>i});var n=s(6540);const d={},l=n.createContext(d);function t(e){const r=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),n.createElement(l.Provider,{value:r},e.children)}},9654:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>o,frontMatter:()=>t,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"syntax/datatypes-operators","title":"Data Types and Operators","description":"EasyBite is a dynamically typed language. You don\u2019t need to declare the type of a variable \u2014 it is inferred from the value assigned using the to keyword. The = operator is not supported.","source":"@site/docs/syntax/datatypes-operators.md","sourceDirName":"syntax","slug":"/syntax/datatypes-operators","permalink":"/syntax/datatypes-operators","draft":false,"unlisted":false,"editUrl":"https://github.com/Easybitedocs/easybitedocs.github.io/tree/main/docs/syntax/datatypes-operators.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Variables","permalink":"/syntax/variables"},"next":{"title":"Control Structures","permalink":"/syntax/control-structures"}}');var d=s(4848),l=s(8453);const t={},i="Data Types and Operators",c={},a=[{value:"Data Types",id:"data-types",level:2},{value:"Examples",id:"examples",level:3},{value:"Assignment",id:"assignment",level:2},{value:"Arithmetic Operators",id:"arithmetic-operators",level:2},{value:"Examples",id:"examples-1",level:3},{value:"Comparison Operators",id:"comparison-operators",level:2},{value:"Examples",id:"examples-2",level:3},{value:"Logical Operators",id:"logical-operators",level:2},{value:"Examples",id:"examples-3",level:3},{value:"Type Casting Operator",id:"type-casting-operator",level:2},{value:"Examples",id:"examples-4",level:3},{value:"Ternary Operator",id:"ternary-operator",level:2},{value:"Examples",id:"examples-5",level:3},{value:"Dictionary Access",id:"dictionary-access",level:2},{value:"Full Combined Example",id:"full-combined-example",level:2},{value:"Notes",id:"notes",level:2}];function h(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(r.header,{children:(0,d.jsx)(r.h1,{id:"data-types-and-operators",children:"Data Types and Operators"})}),"\n",(0,d.jsxs)(r.p,{children:["EasyBite is a dynamically typed language. You don\u2019t need to declare the type of a variable \u2014 it is inferred from the value assigned using the ",(0,d.jsx)(r.code,{children:"to"})," keyword. The ",(0,d.jsx)(r.code,{children:"="})," operator is ",(0,d.jsx)(r.strong,{children:"not supported"}),"."]}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h2,{id:"data-types",children:"Data Types"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Data Type"}),(0,d.jsx)(r.th,{children:"Description"}),(0,d.jsx)(r.th,{children:"Example"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"Number"}),(0,d.jsx)(r.td,{children:"Whole or decimal numbers"}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"10"}),", ",(0,d.jsx)(r.code,{children:"-3.5"}),", ",(0,d.jsx)(r.code,{children:"0"})]})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"String"}),(0,d.jsx)(r.td,{children:"Text enclosed in quotes"}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:'"Hello"'}),", ",(0,d.jsx)(r.code,{children:"'World'"})]})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"Boolean"}),(0,d.jsx)(r.td,{children:"Logical true or false"}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"true"}),", ",(0,d.jsx)(r.code,{children:"false"})]})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"Null"}),(0,d.jsx)(r.td,{children:"Represents empty or undefined value"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"null"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"Array"}),(0,d.jsx)(r.td,{children:"Ordered list of values"}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"declare arr[5]"})," or ",(0,d.jsx)(r.code,{children:"arr[]"})]})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"Dictionary"}),(0,d.jsx)(r.td,{children:"Key-value mappings"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'{ name: "Ali", age: 25 }'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"ByteArray"}),(0,d.jsx)(r.td,{children:"Raw byte sequences"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'bytearray("ABC")'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"Object"}),(0,d.jsx)(r.td,{children:"Instance of a class"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"new User()"})})]})]})]}),"\n",(0,d.jsx)(r.h3,{id:"examples",children:"Examples"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-sql",children:'declare name\r\nset name to "Ali"\r\n\r\ndeclare age\r\nset age to 25\r\n\r\ndeclare scores[]\r\nset scores to [80, 90, 100]\r\n\r\ndeclare person\r\nset person to { name: "Ali", age: 25 }\r\n\r\ndeclare binary\r\nset binary to bytearray("ABC")\r\n\r\ndeclare student\r\nset student to new Student()\n'})}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h2,{id:"assignment",children:"Assignment"}),"\n",(0,d.jsxs)(r.p,{children:["Use ",(0,d.jsx)(r.code,{children:"declare"})," to define a variable, and ",(0,d.jsx)(r.code,{children:"set"})," or ",(0,d.jsx)(r.code,{children:"to"})," to assign a value."]}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-sql",children:'declare x\r\nset x to 10\r\n\r\nx to 20   // Reassign without `set`\r\n\r\ndeclare arr[3]\r\nset arr to [1, 2, 3]\r\n\r\ndeclare user\r\nset user to { name: "Fatima", age: 21 }\n'})}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h2,{id:"arithmetic-operators",children:"Arithmetic Operators"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Operator"}),(0,d.jsx)(r.th,{children:"Name"}),(0,d.jsx)(r.th,{children:"Description"}),(0,d.jsx)(r.th,{children:"Example"}),(0,d.jsx)(r.th,{children:"Result"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"+"})}),(0,d.jsx)(r.td,{children:"Addition"}),(0,d.jsx)(r.td,{children:"Adds two numbers"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"5 + 3"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"8"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"-"})}),(0,d.jsx)(r.td,{children:"Subtraction"}),(0,d.jsx)(r.td,{children:"Subtracts one number from another"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"10 - 4"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"6"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"*"})}),(0,d.jsx)(r.td,{children:"Multiplication"}),(0,d.jsx)(r.td,{children:"Multiplies two numbers"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"4 * 2"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"8"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"/"})}),(0,d.jsx)(r.td,{children:"Division"}),(0,d.jsx)(r.td,{children:"Divides one number by another"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"8 / 2"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"4"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"remind"})}),(0,d.jsx)(r.td,{children:"Modulus"}),(0,d.jsx)(r.td,{children:"Returns remainder"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"7 remind 3"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"1"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"^"})}),(0,d.jsx)(r.td,{children:"Power"}),(0,d.jsx)(r.td,{children:"Raises number to power"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"2 ^ 3"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"8"})})]})]})]}),"\n",(0,d.jsx)(r.h3,{id:"examples-1",children:"Examples"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-sql",children:"show(5 + 3)         // 8\r\nshow(10 - 4)        // 6\r\nshow(4 * 2)         // 8\r\nshow(8 / 2)         // 4\r\nshow(7 remind 3)    // 1\r\nshow(2 ^ 3)         // 8\n"})}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h2,{id:"comparison-operators",children:"Comparison Operators"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Operator"}),(0,d.jsx)(r.th,{children:"Description"}),(0,d.jsx)(r.th,{children:"Example"}),(0,d.jsx)(r.th,{children:"Result"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"is"})," / ",(0,d.jsx)(r.code,{children:"=="})]}),(0,d.jsx)(r.td,{children:"Equal"}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"5 is 5"}),", ",(0,d.jsx)(r.code,{children:"5 == 5"})]}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"true"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"is not"})," / ",(0,d.jsx)(r.code,{children:"!="})]}),(0,d.jsx)(r.td,{children:"Not equal"}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"3 is not 4"}),", ",(0,d.jsx)(r.code,{children:"3 != 4"})]}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"true"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:">"})}),(0,d.jsx)(r.td,{children:"Greater than"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"6 > 3"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"true"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<"})}),(0,d.jsx)(r.td,{children:"Less than"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"2 < 5"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"true"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:">="})}),(0,d.jsx)(r.td,{children:"Greater than or equal"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"5 >= 5"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"true"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<="})}),(0,d.jsx)(r.td,{children:"Less than or equal"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"3 <= 4"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"true"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"is in"})}),(0,d.jsx)(r.td,{children:"Exists inside a collection"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'"Ali" is in names'})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"true"})})]})]})]}),"\n",(0,d.jsx)(r.h3,{id:"examples-2",children:"Examples"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-sql",children:'show(5 is 5)             // true\r\nshow(4 == 4)             // true\r\nshow(3 is not 4)         // true\r\nshow(6 != 5)             // true\r\nshow(9 > 2)              // true\r\nshow(2 < 5)              // true\r\nshow(10 >= 10)           // true\r\nshow(4 <= 7)             // true\r\n\r\ndeclare names[]\r\nset names to ["Ali", "Maryam", "Zainab"]\r\nshow("Ali" is in names)  // true\n'})}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h2,{id:"logical-operators",children:"Logical Operators"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Operator"}),(0,d.jsx)(r.th,{children:"Description"}),(0,d.jsx)(r.th,{children:"Example"}),(0,d.jsx)(r.th,{children:"Result"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"and"})}),(0,d.jsx)(r.td,{children:"Logical AND"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"true and false"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"false"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"or"})}),(0,d.jsx)(r.td,{children:"Logical OR"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"true or false"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"true"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"not"})}),(0,d.jsx)(r.td,{children:"Logical NOT"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"not true"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"false"})})]})]})]}),"\n",(0,d.jsx)(r.h3,{id:"examples-3",children:"Examples"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-sql",children:"show(true and true)     // true\r\nshow(true and false)    // false\r\nshow(false or true)     // true\r\nshow(not false)         // true\n"})}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h2,{id:"type-casting-operator",children:"Type Casting Operator"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Operator"}),(0,d.jsx)(r.th,{children:"Description"}),(0,d.jsx)(r.th,{children:"Example"}),(0,d.jsx)(r.th,{children:"Result"})]})}),(0,d.jsx)(r.tbody,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"as"})}),(0,d.jsx)(r.td,{children:"Converts one type to another"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'"25" as number'})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"25"})})]})})]}),"\n",(0,d.jsx)(r.h3,{id:"examples-4",children:"Examples"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-sql",children:'declare x\r\nset x to "123"\r\n\r\ndeclare y\r\nset y to x as number\r\nshow(y)     // 123\n'})}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h2,{id:"ternary-operator",children:"Ternary Operator"}),"\n",(0,d.jsx)(r.p,{children:"Ternary expressions allow inline conditional assignment using:"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{children:"if condition then value1 else value2\n"})}),"\n",(0,d.jsx)(r.h3,{id:"examples-5",children:"Examples"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-sql",children:'declare age\r\nset age to 17\r\n\r\ndeclare status\r\nset status to if age >= 18 then "Adult" else "Minor"\r\nshow(status)  // Output: Minor\n'})}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h2,{id:"dictionary-access",children:"Dictionary Access"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-sql",children:'declare user\r\nset user to { name: "Maryam", role: "admin" }\r\n\r\nshow(user.name)        // Maryam\r\nshow(user["role"])     // admin\n'})}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h2,{id:"full-combined-example",children:"Full Combined Example"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-sql",children:'declare a\r\nset a to 5 ^ 2\r\nshow(a)          // 25\r\n\r\ndeclare b\r\nset b to 10 remind 3\r\nshow(b)          // 1\r\n\r\nshow(7 == 7)          // true\r\nshow(5 != 3)          // true\r\nshow(6 > 2)           // true\r\n\r\ndeclare passed\r\nset passed to true and not false\r\nshow(passed)          // true\r\n\r\ndeclare list[]\r\nset list to ["apple", "banana", "orange"]\r\nshow("banana" is in list)  // true\r\n\r\ndeclare score\r\nset score to 75\r\ndeclare grade\r\nset grade to if score >= 70 then "Pass" else "Fail"\r\nshow(grade)         // Pass\r\n\r\ndeclare s\r\nset s to "456"\r\ndeclare n\r\nset n to s as number\r\nshow(n)             // 456\n'})}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h2,{id:"notes",children:"Notes"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:["Use ",(0,d.jsx)(r.code,{children:"declare"})," and ",(0,d.jsx)(r.code,{children:"to"})," for assignment."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"="})," is ",(0,d.jsx)(r.strong,{children:"not supported"}),"."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"=="})," and ",(0,d.jsx)(r.code,{children:"!="})," are supported for equality."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"remind"})," is used instead of ",(0,d.jsx)(r.code,{children:"%"}),"."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"^"})," is used for exponentiation."]}),"\n",(0,d.jsxs)(r.li,{children:["Use ",(0,d.jsx)(r.code,{children:"as"})," for type conversion."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"if ... then ... else"})," is the ternary syntax."]}),"\n"]})]})}function o(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}}}]);