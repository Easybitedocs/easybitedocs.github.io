"use strict";(self.webpackChunkeasybitedocs=self.webpackChunkeasybitedocs||[]).push([[523],{1591:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>t,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"functions/callback-function","title":"Callbacks in EasyBite","description":"Callbacks let you pass functions as parameters to other functions, enabling deferred execution, event handling, and highly flexible code structures. In this guide, we\u2019ll unpack callbacks step\u2011by\u2011step, with clear examples and detailed explanations\u2014even if you\u2019ve never worked with callbacks before!","source":"@site/docs/functions/callback-function.md","sourceDirName":"functions","slug":"/functions/callback-function","permalink":"/functions/callback-function","draft":false,"unlisted":false,"editUrl":"https://github.com/Easybitedocs/easybitedocs.github.io/tree/main/docs/functions/callback-function.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Variable Scope","permalink":"/functions/variable-scope"},"next":{"title":"Built\u2011in Functions","permalink":"/functions/builtin-functions"}}');var s=l(4848),a=l(8453);const c={},r="Callbacks in EasyBite",t={},o=[{value:"Table of Contents",id:"table-of-contents",level:3},{value:"Why Callbacks Matter",id:"why-callbacks-matter",level:2},{value:"Conceptual Overview",id:"conceptual-overview",level:2},{value:"Callback Syntax in EasyBite",id:"callback-syntax-in-easybite",level:2},{value:"Defining and Passing Callbacks",id:"defining-and-passing-callbacks",level:2},{value:"Example: Simple Callback",id:"example-simple-callback",level:2},{value:"Example: Using Callbacks for Filtering",id:"example-using-callbacks-for-filtering",level:2},{value:"Example: Simulating Asynchronous Callbacks",id:"example-simulating-asynchronous-callbacks",level:2},{value:"Callbacks with Recursion",id:"callbacks-with-recursion",level:2},{value:"Common Pitfalls",id:"common-pitfalls",level:2},{value:"Tips &amp; Best Practices",id:"tips--best-practices",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"callbacks-in-easybite",children:"Callbacks in EasyBite"})}),"\n",(0,s.jsxs)(n.p,{children:["Callbacks let you ",(0,s.jsx)(n.strong,{children:"pass functions"})," as parameters to other functions, enabling deferred execution, event handling, and highly flexible code structures. In this guide, we\u2019ll unpack callbacks step\u2011by\u2011step, with clear examples and detailed explanations\u2014even if you\u2019ve never worked with callbacks before!"]}),"\n",(0,s.jsx)(n.h3,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#callbacks-in-easybite",children:"Callbacks in EasyBite"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#table-of-contents",children:"Table of Contents"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#why-callbacks-matter",children:"Why Callbacks Matter"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#conceptual-overview",children:"Conceptual Overview"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#callback-syntax-in-easybite",children:"Callback Syntax in EasyBite"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#defining-and-passing-callbacks",children:"Defining and Passing Callbacks"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#example-simple-callback",children:"Example: Simple Callback"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#example-using-callbacks-for-filtering",children:"Example: Using Callbacks for Filtering"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#example-simulating-asynchronous-callbacks",children:"Example: Simulating Asynchronous Callbacks"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#callbacks-with-recursion",children:"Callbacks with Recursion"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#common-pitfalls",children:"Common Pitfalls"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#tips--best-practices",children:"Tips & Best Practices"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#conclusion",children:"Conclusion"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"why-callbacks-matter",children:"Why Callbacks Matter"}),"\n",(0,s.jsx)(n.p,{children:"Callbacks are a cornerstone of modern programming because they let you:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Decouple logic"}),": Write general-purpose functions that call back to user\u2011supplied code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Handle events"}),": Respond to actions (like button clicks or data arrival) by passing a handler function."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Control flow"}),": Delay or sequence operations without hard\u2011coding every step."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"With callbacks, you can build libraries and utilities that other parts of your program\u2014or even other developers\u2019 code\u2014can customize by providing their own functions."}),"\n",(0,s.jsx)(n.h2,{id:"conceptual-overview",children:"Conceptual Overview"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.strong,{children:"callback"})," is simply a function passed as an argument to another function, which then \u201ccalls back\u201d that function at the appropriate time. Think of it like ordering room service: you give the hotel your room number and a callback function (the bell). When your food arrives, they ring the bell to notify you."]}),"\n",(0,s.jsx)(n.p,{children:"Key points:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A callback is a first\u2011class function value."}),"\n",(0,s.jsx)(n.li,{children:"You pass it just like any other parameter."}),"\n",(0,s.jsxs)(n.li,{children:["Inside the caller, you invoke it by using its name and parentheses (e.g., ",(0,s.jsx)(n.code,{children:"callback(data)"}),")."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"callback-syntax-in-easybite",children:"Callback Syntax in EasyBite"}),"\n",(0,s.jsx)(n.p,{children:"Callbacks look like ordinary parameters in EasyBite. Here\u2019s the generic form:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"function doSomething(param1, callback)\r\n    // inside, call the callback when ready\r\n    callback(param1)\r\nend function\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"callback"})," is just a parameter name."]}),"\n",(0,s.jsxs)(n.li,{children:["You call it with ",(0,s.jsx)(n.code,{children:"callback(...)"})," as if it were a normal function."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"You can also give it a default:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"function doSomething(param1, callback to defaultHandler)\r\n    callback(param1)\r\nend function\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If no callback is passed, EasyBite will use ",(0,s.jsx)(n.code,{children:"defaultHandler"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"defining-and-passing-callbacks",children:"Defining and Passing Callbacks"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Define a callback function"})," just like any other:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'function logger(message)\r\n    show "[LOG] " + message\r\nend function\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Define a function that accepts it"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"function processData(value, callback)\r\n    // do some work\r\n    set result to value * 2\r\n    // notify via callback\r\n    callback(result)\r\nend function\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Pass the callback by name"})," (without parentheses):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"processData(5, logger)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This passes the ",(0,s.jsx)(n.code,{children:"logger"})," function itself. Inside ",(0,s.jsx)(n.code,{children:"processData"}),", calling ",(0,s.jsx)(n.code,{children:"callback(result)"})," invokes ",(0,s.jsx)(n.code,{children:"logger(result)"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-simple-callback",children:"Example: Simple Callback"}),"\n",(0,s.jsx)(n.p,{children:"A minimal example to illustrate the flow:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'function greetUser(name)\r\n    show "Hello, " + name + "!"\r\nend function\r\n\r\nfunction welcome(callback, userName)\r\n    show "Welcome!"\r\n    callback(userName)\r\nend function\r\n\r\n// Call \'welcome\', passing \'greetUser\' as the callback\r\nwelcome(greetUser, "Alice")\r\n// Output:\r\n//   Welcome!\r\n//   Hello, Alice!\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"welcome"})," prints \u201cWelcome!\u201d then calls ",(0,s.jsx)(n.code,{children:'greetUser("Alice")'}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The callback allows ",(0,s.jsx)(n.code,{children:"welcome"})," to remain generic."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-using-callbacks-for-filtering",children:"Example: Using Callbacks for Filtering"}),"\n",(0,s.jsxs)(n.p,{children:["Build a reusable filter utility that takes a list and a ",(0,s.jsx)(n.strong,{children:"predicate"})," callback (a function returning true/false):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"from array import length\r\n\r\nfunction filterList(items, predicate)\r\n    declare result\r\n    set result to []\r\n    set i to 1\r\n\r\n    repeat while(i <= length(items))\r\n        if predicate(items[i])\r\n            append result with items[i]\r\n        end if\r\n        set i to i + 1\r\n    end repeat\r\n\r\n    return result\r\nend function\r\n\r\nfunction isEven(n)\r\n    return (n % 2) = 0\r\nend function\r\n\r\nset myNumbers to [1, 2, 3, 4, 5]\r\nset evens to filterList(myNumbers, isEven)\r\nshow evens   // Displays: [2, 4]\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"filterList"})," doesn\u2019t care ",(0,s.jsx)(n.strong,{children:"how"})," you decide to filter\u2014it just calls ",(0,s.jsx)(n.code,{children:"predicate"})," for each item."]}),"\n",(0,s.jsxs)(n.li,{children:["You can pass different predicates (like ",(0,s.jsx)(n.code,{children:"isOdd"}),", ",(0,s.jsx)(n.code,{children:"isPrime"}),", etc.) to reuse ",(0,s.jsx)(n.code,{children:"filterList"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-simulating-asynchronous-callbacks",children:"Example: Simulating Asynchronous Callbacks"}),"\n",(0,s.jsx)(n.p,{children:"Although EasyBite doesn\u2019t have true threads or timers built\u2011in, you can simulate asynchronous behavior by structuring code with callbacks:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'function fetchData(url, callback)\r\n    // Simulate a delay (this is conceptual)\r\n    delay 2   // wait 2 seconds\r\n    set data to "Data from " + url\r\n    callback(data)\r\nend function\r\n\r\nfunction displayData(result)\r\n    show "Fetched: " + result\r\nend function\r\n\r\n// Start fetch, and supply displayData as callback\r\nfetchData("http://api.example.com", displayData)\r\n// After ~2 seconds:\r\n//   Fetched: Data from http://api.example.com\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Here, ",(0,s.jsx)(n.code,{children:"fetchData"})," \u201creturns\u201d via calling ",(0,s.jsx)(n.code,{children:"displayData"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"This pattern underlies real-world APIs like event handlers and network requests."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"callbacks-with-recursion",children:"Callbacks with Recursion"}),"\n",(0,s.jsx)(n.p,{children:"You can combine recursion with callbacks for tasks like tree traversal:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'from array import length\r\n\r\nfunction traverse(node, visit)\r\n    visit(node)\r\n    set i to 1\r\n    repeat while(i <= length(node.children))\r\n        traverse(node.children[i], visit)\r\n        set i to i + 1\r\n    end repeat\r\nend function\r\n\r\nfunction printNode(n)\r\n    show "Node: " + n.name\r\nend function\r\n\r\n// Example tree:\r\ndeclare root\r\nset root to { name: "A", children: [ { name: "B", children: [] }, { name: "C", children: [] } ] }\r\n\r\ntraverse(root, printNode)\r\n// Output:\r\n//   Node: A\r\n//   Node: B\r\n//   Node: C\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"traverse"})," is a recursive function that calls the ",(0,s.jsx)(n.code,{children:"visit"})," callback for each node."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-pitfalls",children:"Common Pitfalls"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Pitfall"}),(0,s.jsx)(n.th,{children:"Symptom"}),(0,s.jsx)(n.th,{children:"Fix"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Passing a call instead of function"}),(0,s.jsx)(n.td,{children:"Callback executes immediately"}),(0,s.jsxs)(n.td,{children:["Pass the function name without ",(0,s.jsx)(n.code,{children:"()"}),": ",(0,s.jsx)(n.code,{children:"processData(5, logger)"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Forgetting parentheses when calling back"}),(0,s.jsx)(n.td,{children:"No callback execution or error"}),(0,s.jsxs)(n.td,{children:["Invoke with ",(0,s.jsx)(n.code,{children:"callback(arg)"})," inside the caller function"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Callback parameter naming collision"}),(0,s.jsx)(n.td,{children:"Confusing code"}),(0,s.jsxs)(n.td,{children:["Use clear names like ",(0,s.jsx)(n.code,{children:"onSuccess"}),", ",(0,s.jsx)(n.code,{children:"onError"}),", ",(0,s.jsx)(n.code,{children:"visit"}),", ",(0,s.jsx)(n.code,{children:"predicate"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Not checking callback before calling"}),(0,s.jsx)(n.td,{children:"Runtime error if nil"}),(0,s.jsxs)(n.td,{children:["Use default or check: ",(0,s.jsx)(n.code,{children:"if callback <> nil then callback(data)"})]})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"tips--best-practices",children:"Tips & Best Practices"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Name callbacks descriptively"}),": ",(0,s.jsx)(n.code,{children:"onComplete"}),", ",(0,s.jsx)(n.code,{children:"handleResult"}),", ",(0,s.jsx)(n.code,{children:"validateItem"})," rather than generic ",(0,s.jsx)(n.code,{children:"cb"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Provide defaults"}),": Use default arguments for callbacks to avoid nil checks."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Keep callback signatures consistent"}),": Decide on few parameters (e.g., ",(0,s.jsx)(n.code,{children:"(error, result)"}),") for event-like callbacks."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Avoid deep nesting"}),": Chain callbacks with care to prevent \u201ccallback hell.\u201d Consider breaking logic into named functions."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"Callbacks in EasyBite unlock powerful patterns:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Customization"}),": Let callers plug in their own behavior."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reusability"}),": Write utilities (like ",(0,s.jsx)(n.code,{children:"filterList"}),") that work for many cases."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Control flow"}),": Sequence and delay actions elegantly."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Experiment by writing small utilities that accept callbacks\u2014then pass in different functions to see how they shape your program\u2019s behavior. With callbacks mastered, you\u2019ll build more dynamic and maintainable EasyBite code!"})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>c,x:()=>r});var i=l(6540);const s={},a=i.createContext(s);function c(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);