"use strict";(self.webpackChunkeasybitedocs=self.webpackChunkeasybitedocs||[]).push([[6087],{8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var r=s(6540);const t={},i=r.createContext(t);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:n},e.children)}},9410:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"libraries/sqlite","title":"SQLite Library Reference","description":"SQLite is a self\u2011contained, high\u2011reliability, embedded, full\u2011featured, public\u2011domain SQL database engine. Unlike client\u2011server databases, SQLite runs in the same process as your application and stores the entire database as a single file on disk. Because of its small footprint (under 600\xa0KB of library code), zero\u2011configuration setup, and transactional integrity, SQLite is ideal for:","source":"@site/docs/libraries/sqlite.md","sourceDirName":"libraries","slug":"/libraries/sqlite","permalink":"/libraries/sqlite","draft":false,"unlisted":false,"editUrl":"https://github.com/Easybitedocs/easybitedocs.github.io/tree/main/docs/libraries/sqlite.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"File System Library Reference","permalink":"/libraries/filesystem"},"next":{"title":"MySQL Library Reference","permalink":"/libraries/mysql"}}');var t=s(4848),i=s(8453);const l={},c="SQLite Library Reference",d={},o=[{value:"Key characteristics:",id:"key-characteristics",level:2},{value:"Why EasyBite Includes SQLite",id:"why-easybite-includes-sqlite",level:2},{value:"Benefits for EasyBite Users",id:"benefits-for-easybite-users",level:2},{value:"Available Functions",id:"available-functions",level:2},{value:"Examples",id:"examples",level:2},{value:"1. <code>connect(dbname)</code> / <code>create(dbname)</code>",id:"1-connectdbname--createdbname",level:3},{value:"2. <code>query(conn, sql)</code> with DDL/DML",id:"2-queryconn-sql-with-ddldml",level:3},{value:"3. <code>insertid()</code>",id:"3-insertid",level:3},{value:"4. Transactions: <code>begin_transaction</code>, <code>commit</code>, <code>rollback</code>",id:"4-transactions-begin_transaction-commit-rollback",level:3},{value:"5. <code>query(conn, sql)</code> with <code>SELECT</code>",id:"5-queryconn-sql-with-select",level:3},{value:"6. <code>fetchall(result)</code>",id:"6-fetchallresult",level:3},{value:"7. <code>numrows(result)</code>",id:"7-numrowsresult",level:3},{value:"8. <code>fetchassoc(result)</code>",id:"8-fetchassocresult",level:3},{value:"9. <code>fetchone(result)</code>",id:"9-fetchoneresult",level:3},{value:"10. <code>fetchrow(result, index)</code>",id:"10-fetchrowresult-index",level:3},{value:"11. <code>fetcharray(result, mode)</code>",id:"11-fetcharrayresult-mode",level:3},{value:"12. <code>escape_string(input)</code>",id:"12-escape_stringinput",level:3},{value:"13. <code>error()</code>",id:"13-error",level:3},{value:"14. <code>version(conn)</code>",id:"14-versionconn",level:3},{value:"15. <code>close(conn)</code>",id:"15-closeconn",level:3},{value:"Conclusion",id:"conclusion",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"sqlite-library-reference",children:"SQLite Library Reference"})}),"\n",(0,t.jsx)(n.p,{children:"SQLite is a self\u2011contained, high\u2011reliability, embedded, full\u2011featured, public\u2011domain SQL database engine. Unlike client\u2011server databases, SQLite runs in the same process as your application and stores the entire database as a single file on disk. Because of its small footprint (under 600\xa0KB of library code), zero\u2011configuration setup, and transactional integrity, SQLite is ideal for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Embedded environments"}),": Mobile apps, IoT devices, desktop utilities."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Prototyping & testing"}),": Spin up a database instantly without installing or configuring a server."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Standalone tools"}),": Command\u2011line utilities, small web services, local caches."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-characteristics",children:"Key characteristics:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Server\u2011less"}),": No separate database server process; your code talks directly to the database file."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Zero\u2011configuration"}),": No \u201cinstallation\u201d\u2014just open the file."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Transactional"}),": Full ACID compliance ensures data integrity, even on crashes or power failures."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Portable"}),": Database files are cross\u2011platform and can be copied, shared, or checked into version control."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SQL support"}),": Most of the SQL\u201192 standard, including complex queries, joins, indexes, triggers, and views."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"why-easybite-includes-sqlite",children:"Why EasyBite Includes SQLite"}),"\n",(0,t.jsx)(n.p,{children:"EasyBite is designed for beginners and hobbyists who want to build powerful data\u2011driven scripts without the overhead of installing and managing external database servers. By bundling SQLite support directly into the language core, EasyBite allows you to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Get started immediately"})," \u2014 no external dependencies or setup steps."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Store structured data"})," \u2014 tables, rows, and indexes let you query and filter large datasets efficiently."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use familiar SQL"})," \u2014 leverage your existing SQL knowledge to interact with data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Build applications that scale"})," \u2014 start small with a local file and later migrate to a larger server\u2011based database if needed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ensure data safety"})," \u2014 ACID transactions protect your data without additional coding."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"benefits-for-easybite-users",children:"Benefits for EasyBite Users"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Simplicity"}),": A single ",(0,t.jsx)(n.code,{children:"import sqlite"})," and you\u2019re ready to create tables, insert records, and run queries."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Integration"}),": Treat database operations like any other EasyBite function\u2014use ",(0,t.jsx)(n.code,{children:"set"}),", ",(0,t.jsx)(n.code,{children:"show"}),", and value assignments."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Portability"}),": Your ",(0,t.jsx)(n.code,{children:".db"})," file travels with your script\u2014share it with teammates or run it on any machine."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance"}),": For most small to medium workloads, SQLite is fast and efficient."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Learning"}),": Gain hands\u2011on SQL experience directly in EasyBite without installing external tools."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h1,{id:"sqlite-library-reference-1",children:"SQLite Library Reference"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"sqlite"})," library provides functions for working with SQLite databases in EasyBite. You must import the module before using any functions:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import sqlite\n"})}),"\n",(0,t.jsx)(n.p,{children:"Or import specific functions:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"from sqlite import connect, query, fetchall\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"available-functions",children:"Available Functions"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Function"}),(0,t.jsx)(n.th,{children:"Parameters"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"connect(dbname)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"dbname"})," (String)"]}),(0,t.jsx)(n.td,{children:"Opens (or creates) the SQLite database file and returns a connection object."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"create(dbname)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"dbname"})," (String)"]}),(0,t.jsxs)(n.td,{children:["Alias for ",(0,t.jsx)(n.code,{children:"connect"}),"\u2014creates a new database file (or opens existing)."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"query(conn, sql)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"conn"})," (Connection), ",(0,t.jsx)(n.code,{children:"sql"})," (String)"]}),(0,t.jsxs)(n.td,{children:["Executes the given SQL. For DML (",(0,t.jsx)(n.code,{children:"INSERT"}),"/",(0,t.jsx)(n.code,{children:"UPDATE"}),"/",(0,t.jsx)(n.code,{children:"DELETE"}),") returns ",(0,t.jsx)(n.code,{children:"true"})," if rows affected >\xa00; for ",(0,t.jsx)(n.code,{children:"SELECT"})," returns a ",(0,t.jsx)(n.code,{children:"SQLiteResult"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fetchall(result)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"result"})," (SQLiteResult)"]}),(0,t.jsxs)(n.td,{children:["Converts a ",(0,t.jsx)(n.code,{children:"SQLiteResult"})," into an array of dictionaries (one per row)."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fetchassoc(result)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"result"})," (SQLiteResult)"]}),(0,t.jsxs)(n.td,{children:["Removes and returns the next row as a dictionary, or ",(0,t.jsx)(n.code,{children:"null"})," if none left."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fetchone(result)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"result"})," (SQLiteResult)"]}),(0,t.jsxs)(n.td,{children:["Equivalent to ",(0,t.jsx)(n.code,{children:"fetchrow(result, 0)"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fetchrow(result, index)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"result"})," (SQLiteResult), ",(0,t.jsx)(n.code,{children:"index"})," (Number)"]}),(0,t.jsxs)(n.td,{children:["Removes and returns the row at ",(0,t.jsx)(n.code,{children:"index"})," as a numeric array, or error if out of bounds."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fetcharray(result, mode)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"result"})," (SQLiteResult), ",(0,t.jsx)(n.code,{children:"mode"})," (0/1/2)"]}),(0,t.jsxs)(n.td,{children:["Removes and returns next row in three modes: ",(0,t.jsx)(n.code,{children:"<0"}),": dict; ",(0,t.jsx)(n.code,{children:"1"}),": numeric array; ",(0,t.jsx)(n.code,{children:"2"}),": both combined."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"numrows(result)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"result"})," (SQLiteResult)"]}),(0,t.jsx)(n.td,{children:"Returns the number of rows remaining in the result set."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"insertid()"})}),(0,t.jsx)(n.td,{children:"\u2015"}),(0,t.jsx)(n.td,{children:"Returns the last insert row ID from the most recent DML, on the global connection."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"begin_transaction(conn)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"conn"})," (Connection)"]}),(0,t.jsx)(n.td,{children:"Begins a new transaction."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"commit(conn)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"conn"})," (Connection)"]}),(0,t.jsx)(n.td,{children:"Commits the current transaction."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"rollback(conn)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"conn"})," (Connection)"]}),(0,t.jsx)(n.td,{children:"Rolls back the current transaction."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"escape_string(input)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"input"})," (String)"]}),(0,t.jsxs)(n.td,{children:["Returns a version of ",(0,t.jsx)(n.code,{children:"input"})," safe for embedding in SQL string literals (single quotes doubled)."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"error()"})}),(0,t.jsx)(n.td,{children:"\u2015"}),(0,t.jsxs)(n.td,{children:["Returns the last error message (currently always ",(0,t.jsx)(n.code,{children:'""'}),")."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"version(conn)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"conn"})," (Connection)"]}),(0,t.jsx)(n.td,{children:"Returns the SQLite library version as a string."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"close(conn)"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"conn"})," (Connection)"]}),(0,t.jsx)(n.td,{children:"Closes the given connection."})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.p,{children:"All examples assume:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import sqlite\n"})}),"\n",(0,t.jsx)(n.p,{children:"and that you have write access to the working directory."}),"\n",(0,t.jsxs)(n.h3,{id:"1-connectdbname--createdbname",children:["1. ",(0,t.jsx)(n.code,{children:"connect(dbname)"})," / ",(0,t.jsx)(n.code,{children:"create(dbname)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'set db to sqlite.connect("test.db")\r\nshow(db.typeof())\r\n// Output:\r\n// "function"  // Connection is a built-in SQLiteConnection\r\n\r\nset newdb to sqlite.create("new.db")\r\nshow(newdb.typeof())\r\n// Output:\r\n// "function"\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"2-queryconn-sql-with-ddldml",children:["2. ",(0,t.jsx)(n.code,{children:"query(conn, sql)"})," with DDL/DML"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'set ok1 to sqlite.query(db, "CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, name TEXT)")\r\nshow(ok1)\r\n// Output:\r\n// true\r\n\r\nset ok2 to sqlite.query(db, "INSERT INTO users (name) VALUES (\'Alice\')")\r\nshow(ok2)\r\n// Output:\r\n// true\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"3-insertid",children:["3. ",(0,t.jsx)(n.code,{children:"insertid()"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"set lastId to sqlite.insertid()\r\nshow(lastId)\r\n// Output (example):\r\n// 1\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"4-transactions-begin_transaction-commit-rollback",children:["4. Transactions: ",(0,t.jsx)(n.code,{children:"begin_transaction"}),", ",(0,t.jsx)(n.code,{children:"commit"}),", ",(0,t.jsx)(n.code,{children:"rollback"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'set _ to sqlite.begin_transaction(db)\r\nset ok to sqlite.query(db, "INSERT INTO users (name) VALUES (\'Bob\')")\r\nshow(ok)\r\n// Output:\r\n// true\r\n\r\nset _ to sqlite.rollback(db)\r\nshow(sqlite.query(db, "SELECT COUNT(*) as cnt FROM users").typeof())\r\n// Output:\r\n// "function"\r\n\r\nset _ to sqlite.begin_transaction(db)\r\nset ok2 to sqlite.query(db, "INSERT INTO users (name) VALUES (\'Carol\')")\r\nshow(ok2)\r\n// Output:\r\n// true\r\n\r\nset _ to sqlite.commit(db)\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"5-queryconn-sql-with-select",children:["5. ",(0,t.jsx)(n.code,{children:"query(conn, sql)"})," with ",(0,t.jsx)(n.code,{children:"SELECT"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'set r to sqlite.query(db, "SELECT id, name FROM users")\r\nshow(r)\r\n// Output:\r\n// true\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"6-fetchallresult",children:["6. ",(0,t.jsx)(n.code,{children:"fetchall(result)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'set allRows to sqlite.fetchall(r)\r\nshow(allRows)\r\n// Output (example):\r\n// [{"id":1,"name":"Alice"},{"id":3,"name":"Carol"}]\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"7-numrowsresult",children:["7. ",(0,t.jsx)(n.code,{children:"numrows(result)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"set count to sqlite.numrows(r)\r\nshow(count)\r\n// Output (example):\r\n// 2\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"8-fetchassocresult",children:["8. ",(0,t.jsx)(n.code,{children:"fetchassoc(result)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'set row1 to sqlite.fetchassoc(r)\r\nshow(row1)\r\n// Output (example):\r\n// {"id":1,"name":"Alice"}\r\n\r\nset row2 to sqlite.fetchassoc(r)\r\nshow(row2)\r\n// Output (example):\r\n// {"id":3,"name":"Carol"}\r\n\r\nset noneLeft to sqlite.fetchassoc(r)\r\nshow(noneLeft)\r\n// Output:\r\n// null\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"9-fetchoneresult",children:["9. ",(0,t.jsx)(n.code,{children:"fetchone(result)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'set r2 to sqlite.query(db, "SELECT name FROM users")\r\nset first to sqlite.fetchone(r2)\r\nshow(first)\r\n// Output (example):\r\n// ["Alice"]\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"10-fetchrowresult-index",children:["10. ",(0,t.jsx)(n.code,{children:"fetchrow(result, index)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'set r3 to sqlite.query(db, "SELECT id FROM users")\r\nset secondId to sqlite.fetchrow(r3, 1)\r\nshow(secondId)\r\n// Output (example):\r\n// [3]\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"11-fetcharrayresult-mode",children:["11. ",(0,t.jsx)(n.code,{children:"fetcharray(result, mode)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'set r4 to sqlite.query(db, "SELECT id, name FROM users")\r\nset asDict to sqlite.fetcharray(r4, 0)\r\nshow(asDict)\r\n// Output:\r\n// {"id":1,"name":"Alice"}\r\n\r\nset asNum to sqlite.fetcharray(r4, 1)\r\nshow(asNum)\r\n// Output:\r\n// [1,"Alice"]\r\n\r\nset asBoth to sqlite.fetcharray(r4, 2)\r\nshow(asBoth)\r\n// Output:\r\n// {"0":1,"1":"Alice","id":1,"name":"Alice"}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"12-escape_stringinput",children:["12. ",(0,t.jsx)(n.code,{children:"escape_string(input)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"set raw to \"O'Reilly\"\r\nset safe to sqlite.escape_string(raw)\r\nshow(safe)\r\n// Output:\r\n// O''Reilly\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"13-error",children:["13. ",(0,t.jsx)(n.code,{children:"error()"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'set err to sqlite.error()\r\nshow(err)\r\n// Output:\r\n// ""\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"14-versionconn",children:["14. ",(0,t.jsx)(n.code,{children:"version(conn)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"set ver to sqlite.version(db)\r\nshow(ver)\r\n// Output (example):\r\n// 3.34.1\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"15-closeconn",children:["15. ",(0,t.jsx)(n.code,{children:"close(conn)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"set _ to sqlite.close(db)\r\nshow(db)\r\n// Output:\r\n// null\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"sqlite"})," library in EasyBite gives you full control over embedded SQL databases:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Import module"}),": ",(0,t.jsx)(n.code,{children:"import sqlite"})," \u2192 ",(0,t.jsx)(n.code,{children:"sqlite.connect(...)"}),", ",(0,t.jsx)(n.code,{children:"sqlite.query(...)"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Selective import"}),": ",(0,t.jsx)(n.code,{children:"from sqlite import connect, query, fetchall"})," \u2192 ",(0,t.jsx)(n.code,{children:'connect("db")'}),", ",(0,t.jsx)(n.code,{children:"query(...)"}),", ",(0,t.jsx)(n.code,{children:"fetchall(...)"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Use these functions to manage tables, transactions, and result sets directly from your EasyBite scripts."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);