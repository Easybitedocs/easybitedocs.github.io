"use strict";(self.webpackChunkeasybitedocs=self.webpackChunkeasybitedocs||[]).push([[5272],{6736:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"syntax/error-handling","title":"Error Handling in EasyBite","description":"Error handling is an essential feature in EasyBite to gracefully handle unexpected situations in your programs. It ensures that errors are captured, managed, and handled appropriately, allowing the program to continue functioning without crashing.","source":"@site/docs/syntax/error-handling.md","sourceDirName":"syntax","slug":"/syntax/error-handling","permalink":"/syntax/error-handling","draft":false,"unlisted":false,"editUrl":"https://github.com/Easybitedocs/easybitedocs.github.io/tree/main/docs/syntax/error-handling.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Dictionaries","permalink":"/syntax/dictionary"},"next":{"title":"Modules","permalink":"/syntax/modules"}}');var i=n(4848),t=n(8453);const o={},a="Error Handling in EasyBite",l={},c=[{value:"Types of Errors",id:"types-of-errors",level:2},{value:"Using Try and Capture Blocks",id:"using-try-and-capture-blocks",level:2},{value:"Syntax:",id:"syntax",level:3},{value:"Example:",id:"example",level:3},{value:"Capturing Specific Errors",id:"capturing-specific-errors",level:2},{value:"Example:",id:"example-1",level:3},{value:"Raising Errors",id:"raising-errors",level:2},{value:"Syntax:",id:"syntax-1",level:3},{value:"Example:",id:"example-2",level:3},{value:"Custom Errors with Variables",id:"custom-errors-with-variables",level:2},{value:"Syntax:",id:"syntax-2",level:3},{value:"Example:",id:"example-3",level:3},{value:"Example of Handling Multiple Errors",id:"example-of-handling-multiple-errors",level:2},{value:"Example:",id:"example-4",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"Summary of Key Functions and Keywords",id:"summary-of-key-functions-and-keywords",level:2}];function d(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"error-handling-in-easybite",children:"Error Handling in EasyBite"})}),"\n",(0,i.jsx)(r.p,{children:"Error handling is an essential feature in EasyBite to gracefully handle unexpected situations in your programs. It ensures that errors are captured, managed, and handled appropriately, allowing the program to continue functioning without crashing."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"types-of-errors",children:"Types of Errors"}),"\n",(0,i.jsx)(r.p,{children:"EasyBite supports three main types of errors:"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Syntax Errors"}),": These errors occur when the code does not follow the language\u2019s syntax rules."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Runtime Errors"}),": These happen when the program is running, often due to invalid operations like dividing by zero or using undefined variables."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Logical Errors"}),": These occur when the program runs without crashing but produces incorrect results due to faulty logic."]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"using-try-and-capture-blocks",children:"Using Try and Capture Blocks"}),"\n",(0,i.jsxs)(r.p,{children:["In EasyBite, you can use ",(0,i.jsx)(r.code,{children:"try"})," and ",(0,i.jsx)(r.code,{children:"capture"})," blocks to handle errors. The ",(0,i.jsx)(r.code,{children:"try"})," block contains code that may throw an error, while the ",(0,i.jsx)(r.code,{children:"capture"})," block is used to handle the error when it occurs."]}),"\n",(0,i.jsx)(r.h3,{id:"syntax",children:"Syntax:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-js",children:"try\r\n    // Code that might cause an error\r\ncapture(varname)\r\n    // Code to handle the error\r\n    // The variable 'varname' captures the error\r\nstop\n"})}),"\n",(0,i.jsx)(r.h3,{id:"example",children:"Example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-js",children:'try\r\n    set result to 10 / 0  // Division by zero\r\ncapture(error)\r\n    show("Error: " + error)  // Prints the captured error\r\nstop\n'})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["In this example, the ",(0,i.jsx)(r.code,{children:"divide"})," function attempts to divide ",(0,i.jsx)(r.code,{children:"10"})," by ",(0,i.jsx)(r.code,{children:"0"}),", which causes a runtime error."]}),"\n",(0,i.jsxs)(r.li,{children:["The ",(0,i.jsx)(r.code,{children:"capture(error)"})," block catches the error and prints the error message."]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"capturing-specific-errors",children:"Capturing Specific Errors"}),"\n",(0,i.jsxs)(r.p,{children:["You can capture specific types of errors by using the ",(0,i.jsx)(r.code,{children:"capture(varname)"})," block. The captured error variable can be used to handle different errors differently."]}),"\n",(0,i.jsx)(r.h3,{id:"example-1",children:"Example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-js",children:'try\r\n    set result to 10 / 0  // Division by zero\r\ncapture(ZeroDivisionError)\r\n    show("Error: Division by zero.")\r\ncapture(TypeError)\r\n    show("Error: Type mismatch.")\r\nstop\n'})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["In this example, different errors are captured in different ",(0,i.jsx)(r.code,{children:"capture"})," blocks. If a ",(0,i.jsx)(r.code,{children:"ZeroDivisionError"})," occurs, it will be handled by the first block; if a ",(0,i.jsx)(r.code,{children:"TypeError"})," occurs, it will be handled by the second block."]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"raising-errors",children:"Raising Errors"}),"\n",(0,i.jsxs)(r.p,{children:["You can manually raise errors using the ",(0,i.jsx)(r.code,{children:"raise"})," keyword in EasyBite. This is useful for enforcing certain conditions in your code and throwing custom errors when those conditions are not met."]}),"\n",(0,i.jsx)(r.h3,{id:"syntax-1",children:"Syntax:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-js",children:'raise error("Error message")\n'})}),"\n",(0,i.jsx)(r.h3,{id:"example-2",children:"Example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-easybite",children:'if age < 18\r\n    raise error("You must be at least 18 years old to proceed.")\r\nend if\n'})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["If the condition ",(0,i.jsx)(r.code,{children:"age < 18"})," is true, the ",(0,i.jsx)(r.code,{children:"raise error()"})," statement will throw a custom error with the specified message."]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"custom-errors-with-variables",children:"Custom Errors with Variables"}),"\n",(0,i.jsx)(r.p,{children:"You can also create custom error variables that can be passed around within your program. This allows you to manage errors dynamically and use them in other parts of the program."}),"\n",(0,i.jsx)(r.h3,{id:"syntax-2",children:"Syntax:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-js",children:"capture(errorVar)\r\n    // Handle the captured error\r\nstop\n"})}),"\n",(0,i.jsx)(r.h3,{id:"example-3",children:"Example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-js",children:'try\r\n    set result to 10 / 0  // Division by zero\r\ncapture(err)\r\n    show("Captured Error: " + err)\r\nstop\n'})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["In this example, the ",(0,i.jsx)(r.code,{children:"err"})," variable captures the error and allows it to be printed later in the program."]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"example-of-handling-multiple-errors",children:"Example of Handling Multiple Errors"}),"\n",(0,i.jsxs)(r.p,{children:["You can handle multiple types of errors in a single ",(0,i.jsx)(r.code,{children:"try"})," block by using multiple ",(0,i.jsx)(r.code,{children:"capture"})," blocks. Each ",(0,i.jsx)(r.code,{children:"capture"})," block can handle a specific type of error."]}),"\n",(0,i.jsx)(r.h3,{id:"example-4",children:"Example:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-js",children:'try\r\n    set result to 10/0  // Division by zero\r\ncapture(ZeroDivisionError)\r\n    show("Error: Cannot divide by zero.")\r\ncapture(OverflowError)\r\n    show("Error: Number too large.")\r\nstop\n'})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Explanation"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["The ",(0,i.jsx)(r.code,{children:"try"})," block attempts to divide ",(0,i.jsx)(r.code,{children:"10"})," by ",(0,i.jsx)(r.code,{children:"0"}),", which triggers the ",(0,i.jsx)(r.code,{children:"ZeroDivisionError"})," and is handled by the first ",(0,i.jsx)(r.code,{children:"capture"})," block."]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsxs)(r.p,{children:["Error handling in EasyBite helps make your programs more robust and reliable. By using ",(0,i.jsx)(r.code,{children:"try"}),", ",(0,i.jsx)(r.code,{children:"capture"}),", and ",(0,i.jsx)(r.code,{children:"raise"}),", you can control the flow of the program, capture errors, and raise custom errors when necessary. This allows your programs to handle issues gracefully without crashing unexpectedly."]}),"\n",(0,i.jsx)(r.p,{children:"By adopting error handling practices, you ensure that your EasyBite applications can deal with runtime errors effectively and provide meaningful feedback to the user."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"summary-of-key-functions-and-keywords",children:"Summary of Key Functions and Keywords"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Function/Keyword"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"try"})}),(0,i.jsx)(r.td,{children:"Defines a block of code that might throw an error."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"capture(varname)"})}),(0,i.jsxs)(r.td,{children:["Captures the error and stores it in a variable ",(0,i.jsx)(r.code,{children:"varname"})," for handling."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"raise error(message)"})}),(0,i.jsx)(r.td,{children:"Raises a custom error with the given message."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"stop"})}),(0,i.jsxs)(r.td,{children:["Ends the current ",(0,i.jsx)(r.code,{children:"try"})," block and prevents further execution of the try-capture cycle."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"end if"})}),(0,i.jsxs)(r.td,{children:["Ends an ",(0,i.jsx)(r.code,{children:"if"})," statement."]})]})]})]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var s=n(6540);const i={},t=s.createContext(i);function o(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);